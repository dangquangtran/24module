spring.application.name=product-service
server.port=8082
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=localhost:${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
eureka.instance.preferIpAddress=true

#PostgreSQL
#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/user_service_24module
spring.datasource.url=jdbc:postgresql://localhost:5432/product_service_24module
spring.datasource.username=postgres
spring.datasource.password=12345
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

#Redis
spring.cache.type=redis
spring.data.redis.host=127.0.0.1
#spring.data.redis.host=host.docker.internal
spring.data.redis.port=6379

#Tracing
management.tracing.enabled=true
management.zipkin.tracing.endpoint=http://localhost:9412/api/v2/spans
management.tracing.sampling.probability=1.0
#management.otlp.tracing.export.enabled=true
#management.otlp.tracing.endpoint=http://localhost:4317
#otel.resource.attributes.service.name=my-service
spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8

#Metric
management.endpoints.web.exposure.include=*
management.prometheus.metrics.export.enabled=true

#resilience4j
resilience4j.circuitbreaker.instances.backendA.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendA.slidingWindowSize=5
resilience4j.circuitbreaker.instances.backendA.failureRateThreshold=50
resilience4j.circuitbreaker.instances.backendA.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.backendA.permittedNumberOfCallsInHalfOpenState=10
resilience4j.retry.instances.backendA.maxAttempts=3
resilience4j.retry.instances.backendA.waitDuration=5000
resilience4j.ratelimiter.instances.backendA.limitForPeriod=10
resilience4j.ratelimiter.instances.backendA.limitRefreshPeriod=5000
resilience4j.bulkhead.instances.backendA.maxConcurrentCalls=5
resilience4j.bulkhead.instances.backendA.maxWaitDuration=5000
resilience4j.timelimiter.instances.backendA.timeoutDuration=2000


