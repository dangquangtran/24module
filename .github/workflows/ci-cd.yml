name: Microservices CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build common-library first
        run: |
          cd common-library
          mvn clean install -DskipTests  # ← Skip tests

      - name: Build other services
        run: |
          cd api-gateway && mvn clean install -DskipTests  # ← Skip tests
          cd ../user-service && mvn clean install -DskipTests  # ← Skip tests
          cd ../product-service && mvn clean install -DskipTests  # ← Skip tests

  deploy:
    needs: build-and-test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          echo "🚀 Deploying to laptop..."
          
          # Di chuyển vào thư mục project
          cd D:\Kienlong\hoc_tap\assignment1-24module
          
          # Pull code mới
          git pull origin main
          
          # Stop containers cũ
          docker-compose down
          
          # Build và start containers mới
          docker-compose up -d --build
          
          echo "⏳ Waiting for services to start..."
          Start-Sleep -Seconds 30
          
          # Health check
          echo "🔍 Health checking..."
          try {
            $response = Invoke-WebRequest -Uri "http://localhost:8090/actuator/health" -UseBasicParsing
            if ($response.StatusCode -eq 200) {
              echo "✅ API Gateway is healthy!"
            } else {
              echo "❌ API Gateway health check failed"
              exit 1
            }
          } catch {
            echo "❌ Health check failed: $_"
            exit 1
          }
          
          # Show status
          echo "📊 Container status:"
          docker-compose ps
          
          echo "📝 Recent logs:"
          docker-compose logs --tail=10
          
          echo "🎉 Deployment successful!"