spring.application.name=user-service
server.port=8081

#PostgreSQL
#spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/user_service_24module
spring.datasource.url=jdbc:postgresql://localhost:5433/user_service_24module
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

#eureka
eureka.instance.instance-id=localhost:${spring.application.name}:${server.port}
eureka.instance.hostname=localhost
eureka.instance.preferIpAddress=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#jwt
jwt.secret-key=1d04b1e94ccf4c9b8a65cfeae2f134fa9eeb6f76be3d4d80a2c9fae680f2d6e4

#Redis
spring.cache.type=redis
spring.data.redis.host=127.0.0.1
#spring.data.redis.host=host.docker.internal
spring.data.redis.port=6379


## Ghi - WRITE (PostgreSQL)
#spring.datasource.write.url=jdbc:postgresql://localhost:5432/write_db
#spring.datasource.write.username=postgres
#spring.datasource.write.password=12345
#
## \u0110\u1ECDc - READ (PostgreSQL, nhi\u1EC1u node)
#spring.datasource.read.urls=jdbc:postgresql://localhost:5433/read_db_1, jdbc:postgresql://localhost:5434/read_db_2
#spring.datasource.read.username=postgres
#spring.datasource.read.password=12345
#spring.jpa.properties.hibernate.hbm2ddl.auto=update


# Dubbo
dubbo.application.name=user-service
dubbo.registry.address=zookeeper://localhost:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=-1
dubbo.scan.base-packages=org.example.userservice
logging.level.org.apache.dubbo=DEBUG


# Vault Configuration
spring.cloud.vault.uri=http://localhost:8200
#Unseal Key 1: YrIoBvam8/gaoq3WCXPO9ntExSPbruSLt+fRAUgWOab6
#Unseal Key 2: YPAGkn06KDvL1EPHX9B39bvFf1/Ld4yS9hYa+jBVTlIK
#Unseal Key 3: NESzuSrZvxQpaxlV0t+z3/AkmwUbyzmWAvFA9t+6Hjeb
#Unseal Key 4: g7+U35Ilfq660/SiKXHqknGnGBBJuU5Au9czEl/8nbKs
#Unseal Key 5: YYo1I20313J5pW0+mf1QxaM2Pcfm7ik+9CajVMGyL+1P
spring.cloud.vault.token=hvs.dNNeFazLGhXpMS3H0cJ2ZpBs
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.application-name=application-db
spring.config.import=vault://

#kafka
spring.cloud.stream.bindings.inputChannel-in-0.destination=my-topic
spring.cloud.stream.bindings.inputChannel-in-0.group=my-group
spring.cloud.stream.bindings.outputChannel-out-0.destination=my-topic


spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.consumer-properties.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.producer-properties.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.producer-properties.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.replication-factor=1
spring.cloud.stream.kafka.binder.partitions=3

#envers
hibernate.envers.audit_table_suffix = _AUD
hibernate.envers.revision_field_name = REV
hibernate.envers.revision_type_field_name = REV_TYPE
hibernate.envers.audit_strategy = org.hibernate.envers.strategy.ValidityAuditStrategy




